@model  MVC_ERP.Models.Sys_Countries

@{
    ViewBag.Title = "Countries";

    <script>
        document.getElementById("LBLFormHDR").innerText = "Countries";
    </script>

}



<div style="margin-left:10px;margin-right:10px">
    <div class="row">
        <br />

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false)


        @* Hidden Fields *@
        @Html.HiddenFor(model => model.Id, new { @class = "form-control" })
        @Html.HiddenFor(model => model.MemberShipId, new { @class = "form-control" })
        @Html.HiddenFor(model => model.Create_Uid, new { @class = "form-control" })
        @Html.HiddenFor(model => model.Create_Date, new { @class = "form-control" })
        @Html.HiddenFor(model => model.Write_Uid, new { @class = "form-control" })
        @Html.HiddenFor(model => model.Write_Date, new { @class = "form-control" })
        @Html.HiddenFor(model => model.Post, new { @class = "form-control" })
        @Html.HiddenFor(model => model.Post_Uid, new { @class = "form-control" })
        @Html.HiddenFor(model => model.Post_Date, new { @class = "form-control" })
        @Html.HiddenFor(model => model.Deleted, new { @class = "form-control" })
        @Html.HiddenFor(model => model.Delete_Uid, new { @class = "form-control" })
        @Html.HiddenFor(model => model.Delete_Date, new { @class = "form-control" })


        @* End Of Hidden Fields *@
        <div class="col-xs-12 col-sm-2">
            @Html.Label("Code")
        </div>
        <div class="col-xs-12 col-sm-10" style="margin-bottom: 5px">
            @Html.TextBoxFor(model => model.Code, new { @class = "form-control", @placeholder = "Leave empty to generate auto code" })
        </div>
        <div class="col-xs-12 col-sm-2">
            @Html.Label("English name")
        </div>
        <div class="col-xs-12 col-sm-4" style="margin-bottom: 5px">
            @Html.TextBoxFor(model => model.NameE, new { @class = "form-control" })
        </div>
        <div class="col-xs-12 col-sm-2">
            @Html.Label("Arabic name")
        </div>
        <div class="col-xs-12 col-sm-4" style="margin-bottom: 5px">
            @Html.TextBoxFor(model => model.NameA, new { @class = "form-control" })
        </div>
        <div class="col-xs-12 col-sm-2">
            @Html.Label("Eng Nationality")
        </div>
        <div class="col-xs-12 col-sm-4" style="margin-bottom: 5px">
            @Html.TextBoxFor(model => model.NationalityE, new { @class = "form-control" })
        </div>
        <div class="col-xs-12 col-sm-2">
            @Html.Label("Arabic Nationality")
        </div>
        <div class="col-xs-12 col-sm-4" style="margin-bottom: 5px">
            @Html.TextBoxFor(model => model.NationalityA, new { @class = "form-control" })
        </div>
        <div class="col-xs-12 col-sm-2">
            @Html.Label("Local Currency")
        </div>
        <div class="col-xs-12 col-sm-4" style="margin-bottom: 5px">

            @Html.HiddenFor(model => model.CurrencyId)
            @(Html.Kendo().ComboBoxFor(model => model.CurrencyId)
                         .Name("CurrencyList")
                                         .HtmlAttributes(new { style = "width:100%; max-width:280px" })
                         .DataTextField("Name")
                         .AutoBind(true)
                           .Filter(FilterType.Contains)

                         .DataValueField("Id")
                         .DataSource(source =>
                          {
                              source.Read(read =>
                              {
                                  read.Action("FillCurrencies", "GenerlaClasses");
                              });
                          })
                          .Events(e =>
                                  {
                                      e.Change("Currencychange")
                                      .DataBound("Currencychange");
                                      // .Select("onSelect")
                                      //  .Open("open")
                                      //   .Close("close")

                                  })

            )



        </div>
        <div class="col-xs-12 col-sm-2">
            @Html.Label("Short Code")
        </div>
        <div class="col-xs-12 col-sm-4" style="margin-bottom: 5px">
            @Html.TextBoxFor(model => model.ShortCode, new { @class = "form-control" })
        </div>


        <div class="col-xs-12 col-sm-2">
            @Html.Label("Telphone key")
        </div>
        <div class="col-xs-12 col-sm-4" style="margin-bottom: 5px">
            @Html.TextBoxFor(model => model.TelKey, new { @class = "form-control" })
        </div>

        <div class="col-xs-12 col-sm-2">
            @Html.Label("Notes")
        </div>
        <div class="col-xs-12 col-sm-4" style="margin-bottom: 5px">

            @Html.TextBoxFor(model => model.Notes, new { @class = "form-control" })

        </div>

    </div>
</div>


<div class="row">
    <div class="col-xs-12">

     @* Window *@
        @(Html.Kendo().Window().Name("window").Title("Search countries")

            .Content(@<text>


      
        <br />
        <div class="row">
            
            <div class="col-lg-6">
                <div class="input-group">
                    <input id="txtSearchValue" type="text" class="form-control" style="max-width:3000px" placeholder="Search">
                    <span class="input-group-btn">
                        <button id="BtnGetSearchResult" class="btn btn-default" type="button">Go!</button>
                    </span>
                </div><!-- /input-group -->
            </div><!-- /.col-lg-6 -->
        </div><!-- /.row -->

        <br />



        <div style="width:100%; height:300px">
            @(Html.Kendo().Grid<MVC_ERP.Models.Sys_Countries>()
             .Name("SearchGrid")
            .AutoBind(false)
             .Columns(columns =>
             {
                 columns.Bound(c => c.Id).Visible(false);
                 columns.Bound(c => c.Code);
                 columns.Bound(c => c.NameE);
                 columns.Bound(c => c.NameA);
                 columns.Bound(c => c.ShortCode);
             })
            
            
                 .Sortable()
                .HtmlAttributes(new { style = "width:100%;min-height:200px;height:100%" })

                       .Scrollable(scrolling => scrolling.Height(250))
                                  //  .Pageable(pageable => pageable
                                  //  .Refresh(true)
                                  //  .PageSizes(false)
                                  //  //.ButtonCount(5)
                           
                                
                                  //)
                                
                          .DataSource(dataSource => dataSource.Ajax()
                              //.ServerOperation(true)

                           .PageSize(1000)
                           .Read(read => read 
                               .Action("Search", "Countries").Data("SetSearchValue")
                            ))
                          
                     .Selectable()
                      .Filterable()
                      .EnableCustomBinding(true)
                    
                              .Events(events => events.Change("item_selected"))

                     )
            
        </div>

            <br />
            @*<div class="modal-footer">
                <button id="BtnCloseWindow" type="button" class="btn btn-default">Cancel</button>
               <button type="button" class="btn btn-success">Return</button>
              </div>*@
    </text>)
        .Scrollable(false)
        //.Draggable()
        //.Resizable()
        //.HtmlAttributes(new { style = "width:100%;min-width:280px;height:100%;min-height:400px" })
                            .Visible(false)
                            .Modal(true)
                            .Actions(actions => actions.Close())
                            .Events(ev => ev.Close("onClose"))


    )




    </div>

</div>

<script>
    function Companychange(e) {

    };
    function Branchchange(e) {

    };
    $(document).ready(function () {
        $("#DivCompanies").hide();
        $("#DivBranches").hide();
        $("#CmbFinancialYear").data("kendoDropDownList").wrapper.hide();
     })
   

    function onClose() {
        //$("#undo").show();
    }

    function SetSearchValue() {
        var info = $("#txtSearchValue").val();
        if (info) {
            return {
                TxtSearchVal: info
            };
        }
    }

    $(document).ready(function () {
        $("#BtnSearch").bind("click", function () {
            $("#window").data("kendoWindow").center().open();
            $("#SearchGrid").data("kendoGrid").dataSource.read();

        });
    });
</script>


@* End Window *@

@*Close from here don't have Open Open it in Layout page*@
</form>

@* Combo Box Events *@
<script>

    function onSelect(e) {

    };

    function Currencychange(e) {
        //Change value of hidden field
        $('#CurrencyId').val(e.sender.value());

    };



</script>

@* End Combo Box Events *@


<script>
    $("#BtnGetSearchResult").click(function () {
             
              $("#SearchGrid").data("kendoGrid").dataSource.read();
            })


    $("#BtnCloseWindow").click(function (e) {
        $("#window").data("kendoWindow").close();
    });

    //Grid

    function item_selected(e) {
        var grid = $("#SearchGrid").data("kendoGrid");
        var id;
                   
        grid.select().each(function() {
            var dataItem = grid.dataItem($(this));
            id = dataItem.Id;
        });
        
        window.location.href = "@Url.Content("~/Countries/Index/")" +id;
    }

</script>

<script>
    $("#BtnCreate").click(function () {

        $(document).ready(function () {

            $("input.form-control").val('');
            $("hidden").val('');
            $("#Id").val('0');
            $("#MemberShipId").val('0');
        });

    })


    //ComboBox Events
    function DataBoundEvent() {

    }

    function SelectEvent(e) {

    }
</script>

